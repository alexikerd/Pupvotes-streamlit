navigator:
  English: "Select a page"
  Italiano: "Sceglia una pagina"
translate:
  English: "Choose a language"
  Italiano: "Sceglia una lingua"
homepage:
  English:
    name: "Homepage"
    title: "Pupvotes \U0001F436"
  Italiano: 
    name: "Pagina Iniziale"
    title: "Set di Gatti \U0001F431"
dataset:
  English:
    name: "Dataset"
    title: "Dataset"
    section1-title: "Reddit Posts"
    section2-title: "Goal"
    section3-title: "Popularity"
    section1-text: "I scheduled a scraper to scrape posts from a variety of dog and cat pictures from reddit.  I scraped all posts from November 6th, 2021 to July 4th, 2022.  Because most of the upvotes occur in the first few days of posting, every datapoing was scraped when it was 1-2 weeks old.  Further analysis proved this to be correct as the age of the post (7-14 days) had 0 correlation with the number of upvotes.  Additionally, I also scraped the number of subscribers for each subreddit (in case any subreddit experience massive growth)."
    section2-text: "I wanted to train a model to understand what made certain photos of dogs/cats more appealing to people.  Initially, I worked on the 'pawpularity' challenge from kaggle but found the dataset unreliable.  Disappointed, I set out to create my own equivalent dataset instead of giving up.  So I scraped data from reddit with post quality approximated by the number of upvotes"
    section3-text: "For this project, I was not as interested in predicting the exact number of upvotes so much as understanding the qualities that made a post more upvoted than others.  As we can see, the number of upvotes is highly skewed.  This makes sense as a lot of reddit users sort by hot, so any post that gains enough traction early to be moved to hot will gain much more upvotes than one that does not.  To account for this, I've logged the number of upvotes to create a new feature known as popularity."
  Italiano:
      name: "Set di Dati"
      title: "Set di Dati"
      section1-title: "Posti di Reddit"
      section2-title: "Scopo"
      section3-title: "Popolarità"
      section1-text: "Ho scritto un scraper per scaricare post dal reddit.  Trovavo le foto dei cani e gatti dal 6 Novembre al 4 Luglio.  Un post riceve la maggioranza dei upvotes nei primi giorni, quindi lo scraper scaricava i post da 1 e 2 settimane nel passato.  Ho fatto analisi dopo di finire e visto che è vero.  Finalmente, non sapevo quanto un subreddit crescerebbe ed io ho scritto un'altro scraper a scaricare il numero di subscribers ogni settimana."
      section2-text: "Volevo insegnare un modelo per capire la ragione che qualcune foto sono più popolari che gli altri.  Ho iniziato questo progetto con il 'pawpularity' set di dati ma ero deluso con la sua qualità.  Quindi, ho deciso a fare il mio propio set di dati.  Ho scelto post di reddit con i upvotes rappresentano la popolarità."
      section3-text: "Per questo progetto, non mi interesa predire il numero esatto dei upvotes.  È più importante sapere le qualità che fa un post ad avere più upvotes che gli altri.  I numeri di upvotes sono molto distorti.  Tanti redditors solo vogliono vedere i posti 'hot', quindi se un post non ottiene abbastanza popolarità al inizio, perde l'opportunità di avere l'udienza generale.  Quindi, ho preso il logaritmo dei numeri per analisare la popolarità dei post."
timeseries:
  English:
    name: "Time Series"
    sidebar-title: "## Options"
    title: "Time Series"
    section1-title: Trends over Time
    section2-title: Time of the Day
    section3-title: Competition
    section1-text: The number of posts remains fairly consistent (you can see the few days where my script failed to run) with one exception.  Christmas experiences a massive spike in dog posts without a corresponding spike with cats.  With median popularity, it seems that cats have only recently begun to outperform dogs.
    section2-text: Unsurprisingly, the number of posts corresponds to the hours where most people are awake (8am-10pm).  The number of upvotes a post gets is highly reliant on user activity.  It seems that the best time to post is in the morning, right before the majority of other posters are posting.  This is the best opportunity to catch the maximum amount of activity while minimizing competition.
    section3-text: I've defined competition as the total number of posts within the same category (dog or cat) that occured within an hour of any given post.  Clearly the less competition a post has, the more upvotes it will get.
    sidebar-filter1-text: Animal
    sidebar-filter1-options: {"all":"All","cats":"Cats","dogs":"Dogs"}
  Italiano: 
    name: "Serie Temporali"
    sidebar-title: "## Opzioni"
    title: "Serie Temporali"
    section1-title: Tendenza nel Tempo
    section2-title: Ora del Giorno
    section3-title: Competizione
    section1-text: Il numero dei post non cambia molto (puoi vedere le settimane che il mio scraper non è funzionato).  Per natale, il numero dei post di cani si è cresciuto ma i gatti no.  A metà del set dei dati, i gatti hanno iniziato ad essere più populari che i cani.
    section2-text: Analisisi dei Soggetti
    section3-text: Nuvola di Parole per Soggetto  
    sidebar-filter1-text: Animale
    sidebar-filter1-options: {"all":"Tutti Due","cats":"Gatti","dogs":"Cani"}
caption:
  English:
    name: "Caption"
    sidebar-title: "## Options"
    title: "Caption Analysis"
    section1-title: Caption Length
    section2-title: Subject Analysis
    section3-title: "Wordcloud by Subject"
    section4-title: Caption Embeddings
    section1-text: Unfortunately, redditors do not usually use verbose captions when posting their photos.  This is because the main piece of information inside a reddit post is the picture of the animal.  Text only serves to help provide context to the image.  For dogs, it seems that the more context the better.  Cat posts get away with much less text but are punished for too long of a caption.  The sweet spot for both appears to be ~10 words long.
    section2-text: As we've seen, posts do not include a lot of text.  This provides a challenge when attempting to group captions together.  For example, christmas posts will likely have either "Merry Christmas" or "Happy Holidays" or "Santa Claus" but will rarely have more than one.  Therefore, any form of unsupervised approach will struggle to correctly group captions.  I have a more in depth analysis on my github.  In order to work around this problem, I've come up with a custom feature engineering approach that applies labels based on my experience digging through the data.  These new labels cover ~30% of the data but contains semantically relevant information that captures the intent behind the post caption. 
    section3-text1: Description
    section3-text2: Examples
    section3-description-attributes: The caption is drawing attention to various features of their pet.
    section3-description-birthday: The redditor is celebrating their pet's birthday.
    section3-description-cute: The focus of the post is on the cuteness of the animal.
    section3-description-death/injury: A pet has either recently died or is injured.
    section3-description-greeting: The redditor is addressing the audience with a greeting.
    section3-description-holiday: The post is celebrating a holiday.
    section3-description-new: The owner has recently adopted or rescued a new pet.
    section3-description-playful: The caption is highlighting how playful or energetic the pet is.
    section3-description-sleep: The animal is either tired, cuddling, or napping.
    section3-description-snow: The post is emphasizing the snow.
    section3-description-sun: The post is emphasizing the warm sun.
    section3-description-walk: The redditor is talking about taking their animal on a walk.
    section4-text: Hopefully the previous section has demonstrated that the subject matter captures relevant information from the caption.  Unfortunately, this does not account for 70% of captions.  In order to account for this, we can create sentence embeddings of the caption using BERT.  Feel free to explore which captions are closest to each other.  
    section4-plot-title: Caption Embedding
    sidebar-filter1-text: Animal
    sidebar-filter1-options: {"all":"All","cats":"Cats","dogs":"Dogs"}
    sidebar-filter2-text: Subject
    sidebar-filter2-options: {'attributes':'Attributes','birthday':'Birthday','cute':'Cute','death/injury': 'Death/Injury','greeting':'Greeting','holiday':'Holiday','new':'New','playful':'Playful','sleep':'Sleep','snow':'Snow','sun':'Sun','walk':'Walk'}
    sidebar-filter3-text: Generate Examples
  Italiano:
    name: "Didascalia"
    sidebar-title: "## Opzioni"
    title: "Analisi della Didascalia"
    section1-title: Lunghezza delle Didascalie
    section2-title: Analisisi dei Soggetti
    section3-title: Nuvola di Parole per Soggetto
    section4-title: Vettore di Didascalia
    section1-text: Sfortunatamente, i redditors non usano tante parole quando fanno i post.  Ovviamente, la parte principale di un post è la foto.  Il testo solo prende contesto al post.  Per i cani, sembra che contesto è più importante.  Un post di un gatto non deve avere molto testo, infatti è peggiore avere troppo.  ~10 parole è migliore per i cani.
    section2-text: Abbiamo già visto che non ci sono tante parole.  Questo è un problema difficile perché i metodi matematici per capire testo ha bisogno di abbastanza parole.  Per esempio, un post per natale può dice 'Merry Christmas' o 'Santa Claus' però mai tutti due.  Quindi gli algoritmi non imparano questa connessione semantica è non scopriamo tendenze nel testo.  Per trovare intuizioni, dovevo leggere abbastanza post e scrivere logico per organizzare il testo.  I miei 12 soggetti capturano 30% dei post.
    section3-text1: Descrizione
    section3-text2: Esempi
    section3-description-attributes: Sta parlando dei parti del corpo.
    section3-description-birthday: Sta festeggiando il compleanno dell'animale.
    section3-description-cute: Il redditor da attenzione a quanto è carino l'animale.
    section3-description-death/injury: "L'animale domestico si è morto recentemente o è stato ferito."
    section3-description-greeting: Il redditor sta salutando.
    section3-description-holiday: Sta festeggiando una vacanza.
    section3-description-new: La famiglia ha adottato l'animale recentemente.
    section3-description-playful: La didascalia descrive l'energia dell'animale.
    section3-description-sleep: L'animale ha sonno ed sta dormendo.
    section3-description-snow: Sta parlando della neve.
    section3-description-sun: Sta parlando del sole.
    section3-description-walk: Il redditor fa una passeggiata con l'animale.
    section4-text: "La sezione scorsa ha mostrato che il soggetto è utile.  Sfortunatamente solo abbiamo un soggetto per 70% delle didascalie.  Possiamo convertire una frase a un vettore con BERT.  Prova a trovare esempi dentro il grafo"
    section4-plot-title: Vettori di Didascalia  
    sidebar-filter1-text: Animale
    sidebar-filter1-options: {"all":"Tutti Due","cats":"Gatti","dogs":"Cani"}
    sidebar-filter2-text: Soggetto
    sidebar-filter2-options: {'attributes':'Caratteristiche','birthday':'Compleanno','cute':'Carino','death/injury': 'Morte/Danno','greeting':'Saluto','holiday':'Vacanza','new':'Nuovo','playful':'Giocoso','sleep':'Sonno','snow':'Neve','sun':'Sole','walk':'Passeggiata'}
    sidebar-filter3-text: Mostra Esempi
subreddit:
  English:
    name: "Subreddit"
    sidebar-title: "## Options"
    title: "Subreddit"
    sidebar-filter1-text: Animal
    sidebar-filter1-options: {"all":"All","cats":"Cats","dogs":"Dogs"}
    sidebar-filter3-texta: X-axis
    sidebar-filter3-textb: Y-axis
    sidebar-filter3-options: {"target":"Popularity","size":"Size","activity":"Activity","growth":"Growth"}
  Italiano:
    name: "Subreddit"
    sidebar-title: "## Opzioni"
    title: "Subreddit"
    sidebar-filter1-text: Animale
    sidebar-filter1-options: {"all":"Tutti Due","cats":"Gatti","dogs":"Cani"}
    sidebar-filter3-texta: X-axis
    sidebar-filter3-textb: Y-axis
    sidebar-filter3-options: {"target":"Popolarità","size":"Taglia","activity":"Attività","growth":"Crescita"}











  